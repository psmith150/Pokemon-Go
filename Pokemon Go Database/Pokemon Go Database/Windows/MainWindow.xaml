<Window x:Class="Pokemon_Go_Database.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:Model="clr-namespace:Pokemon_Go_Database.Model"
        xmlns:local="clr-namespace:Pokemon_Go_Database.Windows"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:customControls="clr-namespace:Pokemon_Go_Database.CustomControls"
        xmlns:valueConverters="clr-namespace:Pokemon_Go_Database.ValueConverters"
        xmlns:screens="clr-namespace:Pokemon_Go_Database.Screens"
        mc:Ignorable="d ignore"
        Height="350"
        Width="525"
        WindowState="Maximized"
        ResizeMode="CanResizeWithGrip"
        Title="Pokemon Go Database"
        TextElement.Foreground="Black"
        Style="{StaticResource MainWindowStyle}"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}">

<Window.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <valueConverters:TypeToBoolConverter x:Key="TypeToBoolConverter" />
    <valueConverters:ViewModelToViewConverter x:Key="ViewModelToViewConverter" />

    <Style TargetType="Border" x:Key="PopupBorderStyle">
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="#AFB4BE" />
    </Style>
    <Style TargetType="Grid" x:Key="OverlayGridStyle">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>
</Window.Resources>
<Window.InputBindings>
    <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveDataCommand}"/>
    <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding LoadDataCommand}"/>
    <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewFileCommand}"/>
</Window.InputBindings>
<Grid Background="{StaticResource MainBackgroundColor}">
    <DockPanel>
        <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Save" Command="{Binding SaveDataCommand}"/>
                    <MenuItem Header="SaveAs" Command="{Binding SaveDataAsCommand}"/>
                    <MenuItem Header="_Open" Command="{Binding LoadDataCommand}"/>
                    <MenuItem Header="_New" Command="{Binding NewFileCommand}"/>
                    <MenuItem Header="_Recent" ItemsSource="{Binding LastFiles}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding DataContext.OpenRecentFileCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Header}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Settings" Command="{Binding OpenSettingsCommand}"/>
        </Menu>
        <Grid DockPanel.Dock="Top"
                   Height="40"
                   Background="Transparent">
            <UniformGrid Rows="1" HorizontalAlignment="Left">
                <UniformGrid.Resources>
                    <!--<Image Source="/Images/DMC Wheel Transparent Background.ico" x:Key="ButtonImage"/>-->
                    <Style TargetType="customControls:HoverButton" BasedOn="{StaticResource {x:Type customControls:HoverButton}}">
                        <Setter Property="Background">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <GradientStop Color="#D8ADE8E3" Offset="0"/>
                                    <GradientStop Color="#B2D2F7E7" Offset="0.987"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="HoverBackgroundBrush" Value="LightBlue"/>
                        <Setter Property="DisabledBackgroundBrush">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <GradientStop Color="#FF64B9B2" Offset="0.01"/>
                                    <GradientStop Color="#FF5EA687" Offset="0.987"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="DisabledForegroundBrush" Value="White" />
                        <Setter Property="Margin" Value="1 0 1 0"/>
                        <Setter Property="Width" Value="130"/>
                    </Style>
                </UniformGrid.Resources>
                    <customControls:HoverButton Content="Pokedex" 
                                            CommandParameter="{x:Type screens:PokedexViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:PokedexViewModel}}"/>
                    <customControls:HoverButton Content="Fast Moves" 
                                            CommandParameter="{x:Type screens:FastMoveViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:FastMoveViewModel}}"/>
                    <customControls:HoverButton Content="Charge Moves" 
                                            CommandParameter="{x:Type screens:ChargeMoveViewModel}"
                                            Command="{Binding NavigateToScreenCommand}"
                                            IsEnabled="{Binding NavigationService.ActiveViewModel, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type screens:ChargeMoveViewModel}}"/>
                </UniformGrid>
            <!--<Grid Background="White">
                    -->
            <!--<Image HorizontalAlignment="Left" 
                       Source="/Images/DMC-Logo.png" 
                       Margin="20 0" 
                       Height="48" />-->
            <!--
                </Grid>-->
        </Grid>
        <Separator DockPanel.Dock="Top" Background="DarkGray" Height="2" Width="Auto" HorizontalAlignment="Stretch"/>
        <!--<DockPanel DockPanel.Dock="Bottom"
                   Height="26"
                   Background="Gray">
                <DockPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Margin" Value="5 0"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </DockPanel.Resources>
                <TextBlock DockPanel.Dock="Left" Text="Status: Online"/>
                <Separator Width="14" 
                       Height="1" 
                       RenderTransformOrigin="0.5,0.5"
                       VerticalAlignment="Center"
                       Background="White">
                    <Separator.RenderTransform>
                        <RotateTransform Angle="90"/>
                    </Separator.RenderTransform>
                </Separator>
                <TextBlock DockPanel.Dock="Left" Text="User: Anonymous"/>
                <TextBlock DockPanel.Dock="Right" Text="{Binding AppVersion, StringFormat=Version: {0}}" />
                <Grid/>
            </DockPanel>-->
        <ContentPresenter Content="{Binding NavigationService.ActiveViewModel, Converter={StaticResource ViewModelToViewConverter}}" />
    </DockPanel>

    <!-- Popup -->
    <Grid Background="Transparent" Visibility="{Binding NavigationService.IsPopupActive, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" 
                  Style="{StaticResource OverlayGridStyle}" />
        <ContentPresenter Grid.Row="1" Grid.Column="1" Content="{Binding NavigationService.ActivePopupViewModel, Converter={StaticResource ViewModelToViewConverter}}" />
    </Grid>

    <!-- Busy Window -->
    <Grid Background="Transparent" Visibility="{Binding Session.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" Style="{StaticResource OverlayGridStyle}" />
        <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource PopupBorderStyle}">
            <Grid Width="300" Height="200" Background="LightGray">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <ProgressBar Grid.Row="2" IsIndeterminate="True" Height="25" Margin="10" />
            </Grid>
        </Border>
    </Grid>
</Grid>
</Window>
